version: "3"

services:
  zookeeper:
    image: bitnami/zookeeper:3.7.0
    container_name: docker_zookeeper_1
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "-w", "2", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - kafka-net
    user: "root"

  kafka:
    image: bitnami/kafka:2.8.0
    container_name: docker_kafka_1
    ports:
      - "9093:9093"
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS=60000
    depends_on:
      - zookeeper
    networks:
      - kafka-net
    user: "root"
  
  spark:
    image: jupyter/pyspark-notebook:spark-3.4.1
    #image: jupyter/pyspark-notebook:spark-2
    container_name: docker_spark_1
    ports:
      - '8888:8888'
      - "4040-4080:4040-4080"
    volumes:
      - ./ApacheSpark/:/home/jovyan/work
      - spark_notebooks:/home/jovyan/notebooks
    command: >
      bash -c "pip install python-decouple && start-notebook.sh"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - AZURE_STORAGE_ACCOUNT_NAME=${AZURE_STORAGE_ACCOUNT_NAME}
      - AZURE_CONTAINER_NAME=${AZURE_CONTAINER_NAME}
      #- AZURE_SAS_TOKEN=${AZURE_SAS_TOKEN} 
      - AZURE_ACCESS_KEY=${AZURE_ACCESS_KEY}
      - PYSPARK_SUBMIT_ARGS=--packages org.apache.spark:spark-sql-kafka-0-10_2.12:3.4.1,org.apache.kafka:kafka-clients:3.5.1,org.postgresql:postgresql:42.7.3,org.apache.hadoop:hadoop-azure:3.3.1,com.microsoft.azure:azure-storage:8.6.6 pyspark-shell  # required jar library for spark 3    
    depends_on:
      - postgres
    networks:
      - kafka-net

  fastapi:
    build:
      context: ../fastAPI
    container_name: fastapi_app
    ports:
      - "80:80"
    networks:
      - kafka-net
    user: "root"

  postgres:
    image: postgres:16
    container_name: docker_postgres_1
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - kafka-net

  pgadmin:
    image: dpage/pgadmin4:8.12
    container_name: docker_pgadmin_1
    ports:
      - "8080:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - kafka-net

volumes:
  postgres_data:
  spark_notebooks:
  pgadmin_data:

networks:
  kafka-net:
    driver: bridge